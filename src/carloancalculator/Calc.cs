// Generated by Haxe 4.1.1

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace carloancalculator {
	public class Calc : global::haxe.lang.HxObject {
		
		static Calc() {
			unchecked{
				#line 3 "/my-component/src/carloancalculator/Calc.hx"
				global::haxe.lang.FieldLookup.addFields(new int[]{5790315, 338842564, 678404778, 1005224604, 1217089161, 1314831315, 1448961845, 1842834182, 2087464034}, new string[]{"tax", "total", "interest", "frequency", "price", "calcPay", "calcAffordability", "payment", "calcPayments"});
			}
		}
		#line default
		
		public Calc(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public Calc() {
			#line 4 "/my-component/src/carloancalculator/Calc.hx"
			global::carloancalculator.Calc.__hx_ctor_carloancalculator_Calc(this);
		}
		#line default
		
		protected static void __hx_ctor_carloancalculator_Calc(global::carloancalculator.Calc __hx_this) {
		}
		
		
		public virtual global::Array<object> calcPayments(double newCarPrice, double tradeInAllowance, double tradeInLoanBalance, double downPaymentAndRebates, double loanDuration, double salesTaxRate, double interestRate) {
			unchecked {
				#line 13 "/my-component/src/carloancalculator/Calc.hx"
				double tax = ( ( salesTaxRate / 100.0 ) * (( newCarPrice - tradeInAllowance )) );
				double principal = ( ( ( ( newCarPrice - tradeInAllowance ) + tradeInLoanBalance ) - downPaymentAndRebates ) + tax );
				#line 16 "/my-component/src/carloancalculator/Calc.hx"
				principal = ( global::System.Math.Floor(((double) (( ( principal * 100 ) + 0.5 )) )) / 100.0 );
				#line 18 "/my-component/src/carloancalculator/Calc.hx"
				global::Array<object> ret = new global::Array<object>();
				ret.push(this.calcPay(principal, interestRate, 12, ((int) (loanDuration) ), "Monthly"));
				#line 20 "/my-component/src/carloancalculator/Calc.hx"
				ret.push(this.calcPay(principal, interestRate, 26, ((int) (global::System.Math.Ceiling(((double) (( loanDuration * 2.16666666666666652 )) ))) ), "Bi-Weekly"));
				ret.push(this.calcPay(principal, interestRate, 52, ((int) (global::System.Math.Ceiling(((double) (( loanDuration * 4.33333333333333304 )) ))) ), "Weekly"));
				#line 22 "/my-component/src/carloancalculator/Calc.hx"
				return ret;
			}
			#line default
		}
		
		
		public virtual object calcAffordability(double monthlyPayment, double tradeInAllowance, double tradeInLoanBalance, double downPaymentAndRebates, double loanDuration, double salesTaxRate, double interestRate) {
			unchecked {
				#line 33 "/my-component/src/carloancalculator/Calc.hx"
				double taxrate = ( salesTaxRate / 100.0 );
				#line 36 "/my-component/src/carloancalculator/Calc.hx"
				double interest = ((double) (0) );
				double aftertax = ( monthlyPayment * loanDuration );
				#line 38 "/my-component/src/carloancalculator/Calc.hx"
				double beforetax = ( aftertax / (( 1.0 + taxrate )) );
				double tax = ( aftertax - beforetax );
				#line 40 "/my-component/src/carloancalculator/Calc.hx"
				double price = beforetax;
				#line 42 "/my-component/src/carloancalculator/Calc.hx"
				if (( interestRate > 0 )) {
					#line 43 "/my-component/src/carloancalculator/Calc.hx"
					double M = monthlyPayment;
					#line 45 "/my-component/src/carloancalculator/Calc.hx"
					double q = ((double) (12) );
					double i = ( interestRate / 100.0 );
					#line 47 "/my-component/src/carloancalculator/Calc.hx"
					double n = ( loanDuration / 12.0 );
					double P = ( ( M * (( 1.0 - global::System.Math.Pow(((double) (( 1.0 + ( i / q ) )) ), ((double) (( ( -1.0 * n ) * q )) )) )) ) * (( q / i )) );
					#line 49 "/my-component/src/carloancalculator/Calc.hx"
					double I = ( ( ( M * n ) * q ) - P );
					#line 51 "/my-component/src/carloancalculator/Calc.hx"
					aftertax = ( ( ( P + downPaymentAndRebates ) + tradeInAllowance ) - tradeInLoanBalance );
					interest = I;
					#line 53 "/my-component/src/carloancalculator/Calc.hx"
					double rebates = tradeInAllowance;
					beforetax = ( (( ( taxrate * rebates ) + aftertax )) / (( 1.0 + taxrate )) );
					#line 55 "/my-component/src/carloancalculator/Calc.hx"
					tax = ( aftertax - beforetax );
					price = beforetax;
				}
				
				#line 59 "/my-component/src/carloancalculator/Calc.hx"
				double total = ( ( price + tax ) + interest );
				#line 62 "/my-component/src/carloancalculator/Calc.hx"
				double tmp = ( global::System.Math.Floor(((double) (( ( price * 100 ) + 0.5 )) )) / 100.0 );
				double tmp1 = ( global::System.Math.Floor(((double) (( ( tax * 100 ) + 0.5 )) )) / 100.0 );
				#line 64 "/my-component/src/carloancalculator/Calc.hx"
				double tmp2 = ( global::System.Math.Floor(((double) (( ( interest * 100 ) + 0.5 )) )) / 100.0 );
				#line 61 "/my-component/src/carloancalculator/Calc.hx"
				{
					#line 65 "/my-component/src/carloancalculator/Calc.hx"
					double __temp_odecl1 = ( global::System.Math.Floor(((double) (( ( total * 100 ) + 0.5 )) )) / 100.0 );
					#line 61 "/my-component/src/carloancalculator/Calc.hx"
					return new global::haxe.lang.DynamicObject(new int[]{}, new object[]{}, new int[]{5790315, 338842564, 678404778, 1217089161}, new double[]{tmp1, __temp_odecl1, tmp2, tmp});
				}
				
			}
			#line default
		}
		
		
		public virtual object calcPay(double principal, double annualInterestRatePercent, int paymentsPerYear, int totalPayments, string frequencyString) {
			unchecked {
				#line 70 "/my-component/src/carloancalculator/Calc.hx"
				double q = ((double) (paymentsPerYear) );
				double i = ( annualInterestRatePercent / 100.0 );
				#line 72 "/my-component/src/carloancalculator/Calc.hx"
				double P = principal;
				double n = ( totalPayments / (( 1.0 * paymentsPerYear )) );
				#line 74 "/my-component/src/carloancalculator/Calc.hx"
				double mden = ( q * (( 1.0 - global::System.Math.Pow(((double) (( 1.0 + ( i / q ) )) ), ((double) (( ( -1.0 * n ) * q )) )) )) );
				double M = ( ( P * i ) / mden );
				#line 76 "/my-component/src/carloancalculator/Calc.hx"
				double I = ( ( ( M * n ) * q ) - P );
				#line 79 "/my-component/src/carloancalculator/Calc.hx"
				double tmp = ( global::System.Math.Floor(((double) (( ( M * 100 ) + 0.5 )) )) / 100.0 );
				#line 77 "/my-component/src/carloancalculator/Calc.hx"
				{
					#line 80 "/my-component/src/carloancalculator/Calc.hx"
					double __temp_odecl1 = ( global::System.Math.Floor(((double) (( ( I * 100 ) + 0.5 )) )) / 100.0 );
					#line 77 "/my-component/src/carloancalculator/Calc.hx"
					return new global::haxe.lang.DynamicObject(new int[]{1005224604}, new object[]{frequencyString}, new int[]{678404778, 1842834182}, new double[]{__temp_odecl1, tmp});
				}
				
			}
			#line default
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				#line 3 "/my-component/src/carloancalculator/Calc.hx"
				switch (hash) {
					case 1314831315:
					{
						#line 3 "/my-component/src/carloancalculator/Calc.hx"
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "calcPay", 1314831315)) );
					}
					
					
					case 1448961845:
					{
						#line 3 "/my-component/src/carloancalculator/Calc.hx"
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "calcAffordability", 1448961845)) );
					}
					
					
					case 2087464034:
					{
						#line 3 "/my-component/src/carloancalculator/Calc.hx"
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "calcPayments", 2087464034)) );
					}
					
					
					default:
					{
						#line 3 "/my-component/src/carloancalculator/Calc.hx"
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
			#line default
		}
		
		
		public override object __hx_invokeField(string field, int hash, object[] dynargs) {
			unchecked {
				#line 3 "/my-component/src/carloancalculator/Calc.hx"
				switch (hash) {
					case 1314831315:
					{
						#line 3 "/my-component/src/carloancalculator/Calc.hx"
						return this.calcPay(((double) (global::haxe.lang.Runtime.toDouble(dynargs[0])) ), ((double) (global::haxe.lang.Runtime.toDouble(dynargs[1])) ), ((int) (global::haxe.lang.Runtime.toInt(dynargs[2])) ), ((int) (global::haxe.lang.Runtime.toInt(dynargs[3])) ), global::haxe.lang.Runtime.toString(dynargs[4]));
					}
					
					
					case 1448961845:
					{
						#line 3 "/my-component/src/carloancalculator/Calc.hx"
						return this.calcAffordability(((double) (global::haxe.lang.Runtime.toDouble(dynargs[0])) ), ((double) (global::haxe.lang.Runtime.toDouble(dynargs[1])) ), ((double) (global::haxe.lang.Runtime.toDouble(dynargs[2])) ), ((double) (global::haxe.lang.Runtime.toDouble(dynargs[3])) ), ((double) (global::haxe.lang.Runtime.toDouble(dynargs[4])) ), ((double) (global::haxe.lang.Runtime.toDouble(dynargs[5])) ), ((double) (global::haxe.lang.Runtime.toDouble(dynargs[6])) ));
					}
					
					
					case 2087464034:
					{
						#line 3 "/my-component/src/carloancalculator/Calc.hx"
						return this.calcPayments(((double) (global::haxe.lang.Runtime.toDouble(dynargs[0])) ), ((double) (global::haxe.lang.Runtime.toDouble(dynargs[1])) ), ((double) (global::haxe.lang.Runtime.toDouble(dynargs[2])) ), ((double) (global::haxe.lang.Runtime.toDouble(dynargs[3])) ), ((double) (global::haxe.lang.Runtime.toDouble(dynargs[4])) ), ((double) (global::haxe.lang.Runtime.toDouble(dynargs[5])) ), ((double) (global::haxe.lang.Runtime.toDouble(dynargs[6])) ));
					}
					
					
					default:
					{
						#line 3 "/my-component/src/carloancalculator/Calc.hx"
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
			}
			#line default
		}
		
		
	}
}


